import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import Icon from '@/components/ui/icon';
import Chat from '@/components/Chat';

const CustomerRequests = () => {
  const navigate = useNavigate();
  const [selectedOrder, setSelectedOrder] = useState<number | null>(null);

  const activeRequests = [
    {
      id: 1,
      productName: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
      quantity: 100,
      location: '–ú–æ—Å–∫–≤–∞',
      status: '–ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
      offers: 3,
      createdDate: '–°–µ–≥–æ–¥–Ω—è, 14:20'
    },
    {
      id: 2,
      productName: '–û–¥–µ–∂–¥–∞',
      quantity: 500,
      location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      status: '–í —Ä–∞–±–æ—Ç–µ',
      offers: 0,
      fulfillmentCenter: '–§–¶ "–°–µ–≤–µ—Ä–Ω–∞—è –ª–æ–≥–∏—Å—Ç–∏–∫–∞"',
      createdDate: '–í—á–µ—Ä–∞, 10:15'
    }
  ];

  const completedRequests = [
    {
      id: 3,
      productName: '–ö–æ—Å–º–µ—Ç–∏–∫–∞',
      quantity: 200,
      location: '–ú–æ—Å–∫–≤–∞',
      fulfillmentCenter: '–§–¶ "–ú–æ—Å–ü–∞–∫"',
      completedDate: '24.10.2024',
      rating: 5
    }
  ];

  const offers = [
    {
      id: 1,
      requestId: 1,
      centerName: '–§–¶ "–ú–æ—Å–ü–∞–∫"',
      price: '45 000 ‚ÇΩ',
      deadline: '2 –¥–Ω—è',
      rating: 4.8,
      completedOrders: 234
    },
    {
      id: 2,
      requestId: 1,
      centerName: '–§–¶ "–ë—ã—Å—Ç—Ä–∞—è —É–ø–∞–∫–æ–≤–∫–∞"',
      price: '42 000 ‚ÇΩ',
      deadline: '1 –¥–µ–Ω—å',
      rating: 4.9,
      completedOrders: 156
    },
    {
      id: 3,
      requestId: 1,
      centerName: '–§–¶ "–ü—Ä–æ–ü–∞–∫"',
      price: '48 000 ‚ÇΩ',
      deadline: '3 –¥–Ω—è',
      rating: 4.7,
      completedOrders: 189
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      <nav className="sticky top-0 z-50 bg-white/80 backdrop-blur-lg border-b border-gray-200">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2 cursor-pointer" onClick={() => navigate('/')}>
              <Icon name="Package" size={32} className="text-primary" />
              <span className="text-2xl font-bold text-gray-900">DEPO44</span>
            </div>
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="icon">
                <Icon name="Bell" size={20} />
              </Button>
              <Button onClick={() => navigate('/customer')}>
                <Icon name="Plus" size={20} className="mr-2" />
                –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞
              </Button>
            </div>
          </div>
        </div>
      </nav>

      <div className="container mx-auto px-4 py-12">
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-2">–ú–æ–∏ –∑–∞—è–≤–∫–∏</h1>
          <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏</p>
        </div>

        <div className="grid md:grid-cols-3 gap-6 mb-8">
          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏</p>
                  <p className="text-3xl font-bold text-gray-900">{activeRequests.length}</p>
                </div>
                <div className="bg-blue-100 p-3 rounded-lg">
                  <Icon name="FileText" size={24} className="text-blue-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–ù–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</p>
                  <p className="text-3xl font-bold text-gray-900">{offers.length}</p>
                </div>
                <div className="bg-green-100 p-3 rounded-lg">
                  <Icon name="Mail" size={24} className="text-green-600" />
                </div>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardContent className="pt-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</p>
                  <p className="text-3xl font-bold text-gray-900">{completedRequests.length}</p>
                </div>
                <div className="bg-purple-100 p-3 rounded-lg">
                  <Icon name="CheckCircle" size={24} className="text-purple-600" />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="active" className="w-full">
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="active">
              –ê–∫—Ç–∏–≤–Ω—ã–µ ({activeRequests.length})
            </TabsTrigger>
            <TabsTrigger value="completed">
              –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ ({completedRequests.length})
            </TabsTrigger>
          </TabsList>

          <TabsContent value="active" className="space-y-4 mt-6">
            {activeRequests.map((request) => (
              <Card key={request.id}>
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div>
                      <CardTitle className="text-xl">{request.productName}</CardTitle>
                      <CardDescription>{request.createdDate}</CardDescription>
                    </div>
                    <Badge variant={request.status === '–í —Ä–∞–±–æ—Ç–µ' ? 'default' : 'secondary'}>
                      {request.status}
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex items-center space-x-6">
                      <div className="flex items-center space-x-2">
                        <Icon name="Package" size={18} className="text-gray-500" />
                        <span className="text-sm text-gray-600">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                        <span className="font-semibold">{request.quantity} —à—Ç</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Icon name="MapPin" size={18} className="text-gray-500" />
                        <span className="text-sm text-gray-600">{request.location}</span>
                      </div>
                    </div>

                    {request.status === '–ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è' && request.offers > 0 && (
                      <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                        <div className="flex items-center justify-between">
                          <div className="flex items-center space-x-2">
                            <Icon name="Mail" size={20} className="text-green-600" />
                            <span className="font-semibold text-green-900">
                              –£ –≤–∞—Å {request.offers} –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!
                            </span>
                          </div>
                          <Button size="sm" variant="outline">
                            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å
                          </Button>
                        </div>

                        <div className="mt-4 space-y-3">
                          {offers.filter(o => o.requestId === request.id).map((offer) => (
                            <Card key={offer.id} className="bg-white">
                              <CardContent className="p-4">
                                <div className="flex items-center justify-between">
                                  <div className="space-y-2">
                                    <div className="flex items-center space-x-2">
                                      <h4 className="font-semibold">{offer.centerName}</h4>
                                      <div className="flex items-center space-x-1">
                                        <Icon name="Star" size={14} className="text-yellow-400 fill-yellow-400" />
                                        <span className="text-sm font-medium">{offer.rating}</span>
                                      </div>
                                    </div>
                                    <div className="flex items-center space-x-4 text-sm text-gray-600">
                                      <span>üí∞ {offer.price}</span>
                                      <span>‚è±Ô∏è {offer.deadline}</span>
                                      <span>üì¶ {offer.completedOrders} –∑–∞–∫–∞–∑–æ–≤</span>
                                    </div>
                                  </div>
                                  <div className="flex space-x-2">
                                    <Dialog>
                                      <DialogTrigger asChild>
                                        <Button 
                                          size="sm" 
                                          variant="outline"
                                          onClick={() => setSelectedOrder(request.id)}
                                        >
                                          <Icon name="MessageCircle" size={16} className="mr-2" />
                                          –ß–∞—Ç
                                        </Button>
                                      </DialogTrigger>
                                      <DialogContent className="max-w-2xl">
                                        <DialogHeader>
                                          <DialogTitle>–ß–∞—Ç —Å {offer.centerName}</DialogTitle>
                                        </DialogHeader>
                                        <Chat 
                                          orderId={request.id}
                                          orderTitle={request.productName}
                                          userRole="customer"
                                          partnerName={offer.centerName}
                                        />
                                      </DialogContent>
                                    </Dialog>
                                    <Button size="sm">
                                      –ü—Ä–∏–Ω—è—Ç—å
                                    </Button>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      </div>
                    )}

                    {request.status === '–í —Ä–∞–±–æ—Ç–µ' && (
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-2">
                          <Icon name="Building" size={18} className="text-gray-500" />
                          <span className="text-sm text-gray-600">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</span>
                          <span className="font-semibold">{request.fulfillmentCenter}</span>
                        </div>
                        <Dialog>
                          <DialogTrigger asChild>
                            <Button size="sm" onClick={() => setSelectedOrder(request.id)}>
                              <Icon name="MessageCircle" size={16} className="mr-2" />
                              –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
                            </Button>
                          </DialogTrigger>
                          <DialogContent className="max-w-2xl">
                            <DialogHeader>
                              <DialogTitle>–ß–∞—Ç —Å {request.fulfillmentCenter}</DialogTitle>
                            </DialogHeader>
                            <Chat 
                              orderId={request.id}
                              orderTitle={request.productName}
                              userRole="customer"
                              partnerName={request.fulfillmentCenter || ''}
                            />
                          </DialogContent>
                        </Dialog>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>
            ))}
          </TabsContent>

          <TabsContent value="completed" className="space-y-4 mt-6">
            {completedRequests.map((request) => (
              <Card key={request.id}>
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div>
                      <CardTitle className="text-xl">{request.productName}</CardTitle>
                      <CardDescription>{request.quantity} –µ–¥–∏–Ω–∏—Ü ‚Ä¢ {request.location}</CardDescription>
                    </div>
                    <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200">
                      <Icon name="CheckCircle" size={14} className="mr-1" />
                      –ó–∞–≤–µ—Ä—à–µ–Ω–æ
                    </Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4">
                      <div className="flex items-center space-x-2">
                        <Icon name="Building" size={18} className="text-gray-500" />
                        <span className="text-sm text-gray-600">{request.fulfillmentCenter}</span>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Icon name="Calendar" size={18} className="text-gray-500" />
                        <span className="text-sm text-gray-600">{request.completedDate}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        {[...Array(5)].map((_, i) => (
                          <Icon 
                            key={i} 
                            name="Star" 
                            size={16} 
                            className={i < request.rating ? 'text-yellow-400 fill-yellow-400' : 'text-gray-300'}
                          />
                        ))}
                      </div>
                    </div>
                    <Button variant="outline" size="sm">
                      <Icon name="Eye" size={16} className="mr-2" />
                      –î–µ—Ç–∞–ª–∏
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default CustomerRequests;
